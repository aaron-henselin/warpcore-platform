
@using BlazorComponents.Shared
@using System.Linq.Expressions
@using System.Linq

@page "/Pages"
@inject HttpClient Http
@layout OneColumn



@if (sites == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col">
            <select class="form-control" onchange="@SiteChanged">
                <option value="">Site</option>
                @foreach (var site in sites)
                {
                    <option value="@site.SiteId">@site.SiteName</option>
                }
            </select>
        </div>
        <div class="col">
            <NavLink href="./Pages/Add"/>
        </div>
    </div>
    <div class="row">
        <div class="col">
            <CascadingValue Value=@this>
                <PageTreeBrowser currentSite=@currentSite />
            </CascadingValue>
        </div>
    </div>



}


@functions {
    SitemapModel currentSite;
    SitemapModel[] sites;


    protected override async Task OnInitAsync()
    {
        await RefreshSitemaps();
        if (currentSite == null)
            currentSite = sites.FirstOrDefault(x => x.IsFrontendSite);
    }

    public async Task RefreshSitemaps()
    {
        sites = await Http.GetJsonAsync<SitemapModel[]>("/api/pagetreeapi/sites");
        if (currentSite != null)
            currentSite = sites.Single(x => x.SiteId == currentSite.SiteId);

        this.StateHasChanged();
    }


    void SiteChanged(UIChangeEventArgs dropdownEvent)
    {

        var selectedPageTreeId = dropdownEvent.Value.ToString();
        currentSite =sites.Single(x => x.SiteId == new Guid(selectedPageTreeId));
        this.StateHasChanged();
    }






}