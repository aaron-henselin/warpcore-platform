@using BlazorComponents.Client
@using BlazorComponents.Client.Shared.PageDesigner
@using BlazorComponents.Client.Shared.PageDesigner.Preview
@using BlazorComponents.Client.Shared.PageTree
@using BlazorComponents.Shared

<div class="pagetree-item depth-@item.Depth"
     data-path="@item.VirtualPath"
     data-parent="@item.ParentPath">

    @if (item.HasChildItems)
    {
        var icon = "fas fa-caret-down";
        if (!item.IsExpanded)
        {
            icon = "fas fa-caret-right";
        }

        <a onclick="@(e => { ToggleExpand(); })">
            <span runat="server" class="@icon"></span>
        </a>

    }

    <span class="pagetree-item-title">
        @item.Name

        @if (item.IsHomePage)
        {
            <span class="fas fa-home homepage-icon"></span>
        }

        @if (!item.IsPublished)
        {
            <small class="unpublished badge badge-secondary">Draft</small>
        }

    </span>
    <span class="float-right pagetree-item-actions">
        <NavLink href=@("./Pages/"+item.PageId+"/Design") Match=NavLinkMatch.All>
            <span class=" fas fa-brush"></span>
            Design
        </NavLink>
        <a href="javascript:void(0);"
           onclick="@(async e => { await PageTreeBrowser.SendToPublish(item); })">
            <span class="fas fa-paper-plane"></span>
            Publish
        </a>

        <a href="@item.SettingsUrl">
            <span class="fas fa-sliders-h"></span>
            Settings
        </a>
    </span>


</div>

@if (item.IsExpanded)
{
    foreach (var child in item.ChildNodes)
    {
        <PageTreeNode item=@child/>
    }
}


@functions {

    [CascadingParameter]
    public PageTreeBrowser PageTreeBrowser { get; set; }

    [Parameter]
    public SitemapModelNode item { get; set; }

    private void ToggleExpand()
    {
        if (!item.IsExpanded)
            item.IsExpanded = true;
        else
        {
            foreach (var dsc in item.GetAllDescendentsAndSelf())
                dsc.IsExpanded = false;
        }
    }
}

