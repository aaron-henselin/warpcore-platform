@using BlazorComponents.Client
@using BlazorComponents.Client.Shared.Forms
@using BlazorComponents.Shared
@implements IConfiguratorComponent<SubFormToolboxItem>
@implements IRendersSubLayout



<div class="form-group">
    <label>@Config.DisplayName</label>

    <FormBody FormDescription="@FormDescription" ref="InnerFormBody"></FormBody>
</div>



@functions {
    [Parameter]
    public SubFormToolboxItem Config { get; set; } // Demonstrates how a parent component can supply parameters

    [CascadingParameter]
    public FormBody FormBody { get; set; }

    [Parameter]
    public ConfiguratorFormDescription FormDescription { get;set;}

    private FormBody InnerFormBody { get; set; }

    public string Value {
        get
        {
            return TextBoxValue;
        }
        set
        {
            TextBoxValue = value;
            this.StateHasChanged();
        }
    }

    public bool IsValid { get { return true; } }


    protected override void OnParametersSet()
    {
        //base.OnParametersSet();
        Console.WriteLine($@"[Forms] OnParametersSet (FormTextBox)");

        if (Config == null)
            throw new Exception("No configurator setup is available, cannot initialize FormTextBox.");

        FormBody.Configurators.RegisterComponent(Config.PropertyName,this);
    }
 }
