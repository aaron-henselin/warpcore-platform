@using BlazorComponents.Shared

<div class="designer wc-configurator">

    <div runat="server" Id="ConfiguratorSideBarBody">
        <h3 style="min-height: 50px;">
            <small class="pull-right">
                <button class="configurator-cancel btn">
                    <span class="glyphicon glyphicon-info-sign">
                    </span> Cancel
                </button>
                <button CssClass="btn" runat="server" Text="Save" ID="SaveButton" />
            </small>
            Settings<br />

        </h3>
        <wc-configurator-data style="display: none;">

        </wc-configurator-data>

        <div runat="server" ID="surface" CssClass="wc-configurator-surface">

        </div>
    </div>
</div>

@if (Categories != null)
{
<div class="tbx">
    <div class="handle">
        <span class="glyphicon glyphicon-wrench"></span>
    </div>
    <h3 class="save-header">
        <span class="button-group">
            <span class="button">
                <span class="glyphicon glyphicon-arrow-left">
                    <a runat="server" Text="Back" ID="BackToPageTreeLinkButton"></a>
                </span>
            </span>
        </span>
        <span class="button-group right">
            <span class="button">
                <span class="glyphicon glyphicon-floppy-save">
                    <a runat="server" Text="Save" ID="SaveDraftButton"></a>
                </span>
            </span>
            <span class="button last">
                <span class="glyphicon  glyphicon-send">
                    <a runat="server" Text="Publish" ID="SaveAndPublishButton"></a>
                </span>
            </span>
        </span>
    </h3>
    <h3>
        Toolbox<br />
        <select class="form-control" onchange="@CategoryChanged">
            <option value="">Site</option>
            @foreach (var category in Categories)
                {
            <option value="@category.CategoryName">@category.CategoryName</option>
                }
        </select>

    </h3>
    <div id="toolboxUl" runat="server" class="toolbox-item-list">

        @if (SelectedCategory != null)
            {
                foreach (var item in SelectedCategory.Items)
                {
        <div class="toolbox-item wc-layout-handle" data-wc-toolbox-item-name="@item.WidgetTypeCode">
            <span class="glyphicon glyphicon-option-vertical">
            </span>
            @item.Name
        </div>
                }
            }
    </div>
</div>

}
else
{
<p>Loading toolbox..</p>
}

@functions
{

    public Node NodeToConfigure { get; set; }


    private List<ToolboxCategory> _categories;

    public List<ToolboxCategory> Categories
    {
        get { return _categories; }
        set
        {
            _categories = value;
            this.StateHasChanged();
        }
    }



    public ToolboxCategory SelectedCategory { get; set; }

    void CategoryChanged(UIChangeEventArgs dropdownEvent)
    {
        SelectedCategory =Categories.Single(x => x.CategoryName == dropdownEvent.Value.ToString());
    }

}
