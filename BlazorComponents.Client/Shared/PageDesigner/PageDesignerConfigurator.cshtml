@using System.Net
@using BlazorComponents.Client
@using BlazorComponents.Shared
@inject HttpClient Http

<div class="designer wc-configurator">

    <div runat="server" Id="ConfiguratorSideBarBody">
        @if (ConfiguratorStructure != null)
        {
            <h3 style="min-height: 50px;">
                <small class="pull-right">
                    <button class="configurator-cancel btn">
                        <span class="glyphicon glyphicon-info-sign">
                        </span> Cancel
                    </button>
                    <button CssClass="btn" runat="server" Text="Save" ID="SaveButton" />
                </small>
                Settings<br />
            </h3>

            <div runat="server" ID="surface" CssClass="wc-configurator-surface">
                @{
                    var toRender = ConfiguratorStructure.ChildNodes;
                    foreach (var item in toRender)
                    {
                        <FormNode DesignNode=@item Dispatcher=@Dispatcher/>
                    }
                }
            </div>
        }
    </div>
</div>

@functions
{

    private PageStructure ConfiguratorStructure { get; set; }

    [Parameter]
    public StructureNode NodeToConfigure { get; set; }

    [Parameter]
    public FormEventDispatcher Dispatcher { get; set; }


    public async Task StartEditing(StructureNode structureNode)
    {
        NodeToConfigure = structureNode;
        ConfiguratorStructure = null;
        this.StateHasChanged();


        var formApiPath = "api/design/configurator-form/" + structureNode.WidgetTypeCode;
        ConfiguratorStructure = await Http.GetJsonAsync<PageStructure>(formApiPath);
        this.StateHasChanged();
    }


}



