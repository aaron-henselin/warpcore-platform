@using System.Net
@using BlazorComponents.Client
@using BlazorComponents.Client.Shared.PageDesigner
@using BlazorComponents.Client.Shared.PageDesigner.Preview
@using BlazorComponents.Shared
@inject HttpClient Http

<wc-chrome>


    <wc-design class="@(SideBarMode != SideBarMode.Collapsed ? "col-md-9" : "col-md-12")">
        @if (SideBarMode == SideBarMode.Collapsed || SideBarMode == SideBarMode.Toolbox)
        {
            <wc-sidebar-handle>
                <a class="handle" onclick=@ToggleSideBar>
                    <span class="glyphicon glyphicon-wrench"></span>
                </a>
            </wc-sidebar-handle>
        }
        <CascadingValue Value=@this>
            <PagePreview ref="Preview" />
        </CascadingValue>
    </wc-design>

    <wc-sidebar class="@(SideBarMode == SideBarMode.Configurator ? "col-md-3" : "collapse")">
        <CascadingValue Value=@this>
            <PageDesignerConfigurator ref="ConfiguratorWidget" Dispatcher=@formEventDispatcher />
        </CascadingValue>
    </wc-sidebar>
    <wc-sidebar class="@(SideBarMode == SideBarMode.Toolbox ? "col-md-3" : "collapse")">
        <CascadingValue Value=@this>
            <PageDesignerToolBox ref="ToolBoxWidget" />
        </CascadingValue>
    </wc-sidebar>

</wc-chrome>

@functions
{
[Parameter]
public Guid pageId { get; set; }

private SideBarMode SideBarMode { get; set; }

PagePreview Preview { get; set; }
PageDesignerToolBox ToolBoxWidget { get; set; }
PageDesignerConfigurator ConfiguratorWidget { get; set; }

FormEventDispatcher formEventDispatcher = new FormEventDispatcher();



public void CloseSideBar()
{
    SideBarMode = SideBarMode.Collapsed;
    this.StateHasChanged();
}

public async Task BeginExpandSideBarAndStartEditing(StructureNode relatedPageContent)
{
    Console.WriteLine($"[Design Page] Expanding Configurator Sidebar");
    SideBarMode = SideBarMode.Configurator;
    this.StateHasChanged();

    await ConfiguratorWidget.StartNewSession(relatedPageContent);
}

public async Task RefreshPagePreviewAsync()
{
    await Preview.RefreshPagePreviewAsync(pageId);
}


void ToggleSideBar(UIMouseEventArgs toExpand)
{
    SideBarMode = SideBarMode == SideBarMode.Collapsed ? SideBarMode.Toolbox : SideBarMode.Collapsed;
    this.StateHasChanged();
}

}

